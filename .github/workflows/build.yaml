name: DEV - Build Flask APP

on:
  push:
    branches: ["main", "dev"]

permissions:
  id-token: write   # OIDC 토큰 발급 허용
  contents: read    # 리포 콘텐츠 읽기(일반적으로 필요)

env:
  IMAGE_NAME: flask-app

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_IAM_ROLE }}
          role-session-name: githubactions_study-01

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set IMAGE_TAG
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "IMAGE_TAG=prod" >> $GITHUB_ENV
          else [[ "${GITHUB_REF##*/}" == "dev" ]]; then
            echo "IMAGE_TAG=dev" >> $GITHUB_ENV
          fi

      - name: Build & Push to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: devops/study-01
          # IMAGE_TAG: ${{ github.sha }}
          # IMAGE_TAG: ${{ github.ref_name }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG